name: RAG-DeepSeek-R1 CI/CD

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

env:
  PYTHON_VERSION: "3.10"
  POETRY_VERSION: "1.7.1"

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      chroma:
        image: chromadb/chroma:latest
        ports:
          - 8000:8000

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry==${{ env.POETRY_VERSION }}
          poetry install

      - name: Run tests
        run: |
          poetry run pytest tests/ --cov=src --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry==${{ env.POETRY_VERSION }}
          poetry install

      - name: Run linting
        run: |
          poetry run ruff check .
          poetry run black --check .
          poetry run mypy src/

  docker:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push FastAPI
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/fastapi.Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/rag-deepseek-fastapi:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/rag-deepseek-fastapi:latest

      - name: Build and push Streamlit
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/streamlit.Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/rag-deepseek-streamlit:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/rag-deepseek-streamlit:latest

      - name: Build and push Model Server
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/model.Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/rag-deepseek-model:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/rag-deepseek-model:latest
