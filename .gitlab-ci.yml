image: docker:20.10.16

services:
  - docker:20.10.16-dind

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  KUBECONFIG: /etc/deploy/config

stages:
  - test
  - build
  - deploy

# Test Stage
test:
  stage: test
  image: python:3.10-slim
  before_script:
    - pip install -r requirements.txt
    - pip install pytest pytest-cov
  script:
    - pytest tests/ --cov=src/
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

# Build Stage
build_images:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/model:$CI_COMMIT_SHA ./src/model
    - docker build -t $CI_REGISTRY_IMAGE/api:$CI_COMMIT_SHA ./src/api
    - docker build -t $CI_REGISTRY_IMAGE/ui:$CI_COMMIT_SHA ./src/ui
    - docker push $CI_REGISTRY_IMAGE/model:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/api:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/ui:$CI_COMMIT_SHA
  only:
    - main
    - staging

# Deploy Stage
.deploy_template: &deploy_definition
  image: bitnami/kubectl:latest
  script:
    - kubectl config use-context $KUBE_CONTEXT
    - |
      sed -i "s|your-registry|$CI_REGISTRY_IMAGE|g" kubernetes/deployments/*.yml
      sed -i "s|latest|$CI_COMMIT_SHA|g" kubernetes/deployments/*.yml
    - kubectl apply -f kubernetes/secrets/
    - kubectl apply -f kubernetes/deployments/
    - kubectl apply -f kubernetes/services/
    - kubectl rollout status deployment/deepseek-model -n rag-system
    - kubectl rollout status deployment/fastapi-service -n rag-system
    - kubectl rollout status deployment/streamlit-ui -n rag-system

deploy_staging:
  <<: *deploy_definition
  stage: deploy
  variables:
    KUBE_CONTEXT: staging
  environment:
    name: staging
  only:
    - staging

deploy_production:
  <<: *deploy_definition
  stage: deploy
  variables:
    KUBE_CONTEXT: production
  environment:
    name: production
  only:
    - main
  when: manual